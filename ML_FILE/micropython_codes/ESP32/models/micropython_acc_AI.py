import numpy as np
def neural_network_acc(values):
  
  values = np.array(values)
  def col(M,i):
    return([row[i] for row in M])

  def transpose(M):
    rows, cols = M.shape
    tM = np.zeros((cols, rows))
    for i in range(rows):
       for j in range(cols):
          tM[j,i] = M[i,j]
    return tM
          
  def print_matrice(M, decimals = 3):
    """
    Print a matrix one row at a time
        :param M: The matrix to be printed
        """
    for row in M:
        print([round(x, decimals) for x in row])

  def relu(x):
    return np.maximum(0,x)

  def sigmoid(x):
    ## the possible range of numbers in micropython is severely constrained
    return 1 / (1 + np.exp(-x))


  def dense(nunit, x, w, b, activation): #a single dense layer with activation
    res = neuron(x, w[0], b[0], activation)
    for i in range(1,nunit):
        z = neuron(x, w[i], b[i], activation)
        res = np.concatenate((res,z))
    return res.reshape((nunit,-1))

  def neuron(x, w, b, activation): #perfor operation on a singke neuron and return a 1d array
    z = np.dot(w,x) + b
    if activation == "sigmoid":
        yp = sigmoid(z)
    elif activation == "relu":
        yp = relu(z)
    # elif activation == "softmax":
    #     yp = softmax([tmp[i] + b for i in range(len(tmp))])  
    else:
        print("Invalid activation function -- Please choose between 'relu', 'sigmoid' or 'softmax")
    return yp      

  w1 = np.array([[ 1.11821655e-03, -2.41080686e-01, -6.77570760e-01,
          1.45755434e+00,  1.81750245e-02, -3.55749577e-01,
          -1.08366124e-01, -9.45297837e-01,  3.77784908e-01,
          9.34729800e-02, -2.80637205e-01, -1.30919069e-01,
          1.67304859e-01, -2.40633631e+00,  7.94915676e-01,
          -1.95232078e-01],
        [-1.67355919e+00,  1.48951793e+00,  1.88894093e-01,
          -2.20274225e-01,  6.26223162e-02,  4.37381327e-01,
          1.98884398e-01, -3.28319430e-01, -3.89689989e-02,
          1.93109930e-01, -1.53979406e-01, -1.69618741e-01,
          -6.34051636e-02, -4.31098461e-01,  5.86374700e-01,
          -3.04169148e-01],
        [-5.95304444e-02, -1.10276461e-01, -3.06787312e-01,
          -8.47844630e-02,  3.01468223e-01, -2.75191903e-01,
          -1.25005579e+00,  1.63684338e-01,  3.82690400e-01,
          -1.19571102e+00,  2.35826206e+00, -9.46547329e-01,
          -6.71737194e-02,  1.21923193e-01, -4.05678689e-01,
          3.60591412e-01],
        [ 3.22690129e-01, -4.58654225e-01, -9.86319363e-01,
          4.10947114e-01, -1.42098755e-01,  3.68629843e-01,
          1.62857831e-01, -7.18302786e-01,  2.71078855e-01,
          -1.00615405e-01, -4.00462955e-01,  3.82591158e-01,
          5.96536219e-01,  2.00751215e-01, -1.85256988e-01,
          6.39876962e-01],
        [ 1.01226270e-01,  1.92311019e-01, -1.28085494e-01,
          5.23779877e-02, -1.34065881e-01,  2.64438927e-01,
          2.14411207e-02,  6.61362529e-01, -3.70147601e-02,
          -7.70501792e-02,  4.13178951e-02, -2.11296603e-02,
          -1.89928740e-01,  3.54090959e-01, -1.27770394e-01,
          -5.36066532e-01],
        [ 2.65163779e-01, -2.77562141e-01, -8.01603734e-01,
          2.19621643e-01, -6.04841374e-02,  3.56178999e-01,
          3.08529794e-01, -6.54853880e-01, -5.98046482e-02,
          -1.96959302e-01, -4.12725717e-01,  2.42618710e-01,
          6.85264289e-01,  1.22674942e-01,  1.50529295e-01,
          3.96850646e-01],
        [ 2.62853980e-01, -1.81885064e-01, -1.25158980e-01,
          9.63836133e-01, -5.19512296e-01, -1.14798695e-01,
          2.51112357e-02, -4.03940856e-01,  6.79794729e-01,
          4.09121394e-01,  1.79562613e-01, -5.08679569e-01,
          1.51523381e-01, -8.91047537e-01,  4.42213714e-01,
          -6.15181075e-03],
        [-1.07038736e+00,  1.15398693e+00, -3.62419337e-01,
          -1.22179121e-01, -3.60750079e-01,  1.14882700e-01,
          5.15481234e-01, -6.11015968e-02, -9.36735094e-01,
          -2.78837718e-02,  1.57408386e-01, -5.71854591e-01,
          5.94826527e-02, -3.42651963e-01,  6.00283630e-02,
          -3.43965679e-01],
        [-2.76472270e-01,  1.39388472e-01,  2.98423767e-01,
          -1.38650239e-01,  2.83915639e-01,  8.32940489e-02,
          -6.05374098e-01,  4.36481297e-01,  2.60916263e-01,
          -1.68848979e+00,  1.81026876e+00,  4.40805554e-02,
          -5.24489656e-02,  3.51728648e-01, -1.98565573e-01,
          2.77345657e-01],
        [ 3.67778748e-01, -5.91083825e-01, -1.60813439e+00,
          -1.34840161e-02,  2.15839341e-01,  8.75636518e-01,
          1.20919153e-01, -3.56198877e-01,  3.26537877e-01,
          -1.49888828e-01,  2.51683891e-01, -3.67372155e-01,
          6.85831904e-01,  1.31602302e-01, -4.89479937e-02,
          -3.89205009e-01],
        [ 3.08141053e-01,  4.48950147e-03, -1.96254522e-01,
          7.02284947e-02,  2.35642880e-01,  5.80849051e-01,
          -9.49863046e-02,  1.97121486e-01,  1.48011819e-01,
          -2.07194969e-01,  1.22995429e-01,  1.33555472e-01,
          -4.25277948e-01,  1.38820961e-01,  4.56441753e-02,
          -1.40713677e-01],
        [ 2.33339652e-01, -5.45036733e-01, -1.16095102e+00,
          -9.61928591e-02,  3.37650657e-01,  6.25572562e-01,
          1.95637181e-01, -1.73603326e-01,  1.29841834e-01,
          -3.02801192e-01, -1.11677073e-01,  2.63829589e-01,
          3.98284972e-01, -2.13623736e-02,  1.01813063e-01,
          -3.59292835e-01],
        [-2.01519310e-01, -2.00345054e-01,  2.89970160e-01,
          7.11832643e-01, -9.07093346e-01, -1.59886032e-01,
          3.82982306e-02, -1.06329925e-01,  3.41000021e-01,
          -1.06063023e-01,  2.10921124e-01,  1.75376400e-01,
          -4.00479168e-01, -7.55008459e-01,  7.04114795e-01,
          1.40836626e-01],
        [-6.40974879e-01,  1.11799669e+00, -1.41840920e-01,
          1.80502199e-02, -1.86516382e-02,  1.74695671e-01,
          -3.36527854e-01, -2.39293873e-01, -2.17239857e-01,
          -8.75659660e-02,  3.42494175e-02,  1.02370568e-01,
          3.85271311e-01, -1.22291915e-01,  5.91771960e-01,
          1.60831269e-02],
        [-1.34464502e-01,  5.02054811e-01,  3.25310141e-01,
          -7.18342513e-02,  1.71156168e-01,  3.37849557e-01,
          -5.69327295e-01, -1.87062606e-01,  4.78917331e-01,
          -7.76318371e-01,  7.68509090e-01,  6.58999443e-01,
          1.82309151e-01,  9.99951065e-02, -8.17981288e-02,
          2.26422921e-01],
        [-6.59028739e-02, -4.58927572e-01, -1.15696216e+00,
          2.20872819e-01,  3.81618559e-01,  1.50487208e+00,
          -1.13629088e-01, -2.54648417e-01,  8.45803797e-01,
          -1.65955886e-01,  3.18893045e-02, -1.94009766e-01,
          -6.61709070e-01, -7.67141301e-03, -1.11307651e-02,
          -2.70502090e-01],
        [-9.45949182e-02,  1.16266154e-01,  6.39095545e-01,
          1.80690959e-02, -1.00799184e-02,  2.77216226e-01,
          -1.20293442e-02, -7.79121444e-02,  2.22767398e-01,
          -2.51449607e-02, -3.17892917e-02,  7.73306862e-02,
          -4.25027430e-01, -1.48899406e-02, -1.48072347e-01,
          -1.33534640e-01],
        [-3.78927112e-01, -3.22253466e-01, -7.01002240e-01,
          1.19752549e-01,  3.62821668e-01,  1.20734632e+00,
          1.79209679e-01, -2.83789277e-01,  4.28316385e-01,
          -2.00079858e-01, -4.03659418e-02,  3.18016082e-01,
          -4.21358138e-01, -1.02863751e-01,  5.04811034e-02,
          -1.30085163e-02],
        [-2.86546588e-01, -3.61455083e-01,  2.76783496e-01,
          4.17831510e-01, -8.85754228e-01,  2.74539202e-01,
          -6.93648100e-01,  5.02922535e-02,  8.44867349e-01,
          3.54926646e-01,  4.25033346e-02,  1.29293604e-02,
          -1.66807127e+00, -2.21429557e-01,  6.30589664e-01,
          8.54620561e-02],
        [ 5.32497466e-02,  8.46289098e-01,  1.95342660e-01,
          -1.28283679e-01, -1.94366962e-01,  5.26338778e-02,
          -5.87648273e-01, -7.71546602e-01, -6.86633646e-01,
          1.31048813e-01, -6.48877546e-02, -1.65526122e-01,
          3.56421843e-02,  1.68708622e-01,  8.08141410e-01,
          -2.60299414e-01],
        [-3.82707149e-01,  3.59208494e-01,  8.86678696e-02,
          1.84681714e-01,  7.88495779e-01,  2.31797591e-01,
          -7.70356953e-01, -5.17467320e-01,  1.42044708e-01,
          -1.26173866e+00,  1.66295111e-01,  9.16068017e-01,
          -2.81539381e-01, -4.03558522e-01, -1.24955691e-01,
          3.87190342e-01],
        [-1.77652374e-01,  2.28073537e-01, -6.28534675e-01,
          -9.96698141e-02,  5.21974325e-01,  1.94141531e+00,
          2.55232394e-01, -5.31462729e-01,  9.63295698e-01,
          7.15916604e-02,  3.25845420e-01,  1.11479469e-01,
          -2.72112459e-01,  1.35376966e-02, -2.23394856e-02,
          5.36441877e-02],
        [ 9.46772695e-02,  1.85720295e-01,  5.95421731e-01,
          -1.55814178e-02, -1.11192577e-01,  1.04532607e-01,
          2.55937785e-01, -3.81660163e-01,  4.97773439e-02,
          3.38787645e-01,  1.49596438e-01, -6.29945844e-02,
          -9.04169008e-02, -5.76199684e-03, -3.20555866e-02,
          3.23604852e-01],
        [-1.59290746e-01, -2.60045230e-01, -4.80504602e-01,
          -9.61073563e-02, -8.03690851e-02,  8.69310021e-01,
          1.54475093e-01, -6.68781579e-01,  2.35431030e-01,
          -6.25553876e-02,  7.59930834e-02, -1.04670953e-02,
          -2.06732273e-01, -1.09164696e-02,  1.04828663e-01,
          -1.48064792e-01],
        [-1.06829464e-01,  1.04343332e-01,  4.77766067e-01,
          3.23242508e-02, -1.09928310e+00,  8.82476196e-02,
          -1.13788985e-01,  1.31778196e-01,  2.49458581e-01,
          4.51505184e-01, -1.28984496e-01, -3.63536365e-03,
          -6.29804611e-01,  1.07513167e-01,  1.18206523e-01,
          -3.73354822e-01],
        [ 8.45489144e-01,  7.89619505e-01,  1.13878340e-01,
          -1.53132826e-01,  1.48874059e-01,  3.07822555e-01,
          -9.80745077e-01, -4.33148652e-01, -4.77269262e-01,
          4.53250229e-01,  8.22164118e-02, -4.15354483e-02,
          7.54232407e-02,  2.21420541e-01,  7.41208255e-01,
          -7.06879556e-01],
        [ 2.57408679e-01,  2.62394220e-01, -1.84949026e-01,
          2.06432268e-01,  4.06752765e-01,  6.73354864e-02,
          -7.91424394e-01, -1.70737252e-01, -9.86701772e-02,
          -8.02994072e-01, -1.76890612e-01,  1.24724412e+00,
          1.65868804e-01, -2.16131583e-01, -1.74568355e-01,
          8.83477777e-02],
        [-1.29334003e-01,  1.38364136e-01,  2.75496095e-01,
          7.69727379e-02,  3.23384494e-01,  9.67359841e-01,
          8.56047124e-03, -4.42966431e-01,  4.74987119e-01,
          -6.16516024e-02,  1.97119892e-01,  3.06689858e-01,
          -7.59626210e-01, -6.60998821e-02, -7.15590790e-02,
          1.76662639e-01],
        [ 1.14167303e-01,  1.54294893e-01, -1.47224084e-01,
          -3.74554127e-01,  6.85840696e-02, -2.68834215e-02,
          2.22108867e-02, -9.95014787e-01, -2.23690763e-01,
          -1.00157790e-01, -1.38952911e-01,  3.66615534e-01,
          8.44040096e-01, -1.29758433e-01, -2.67918799e-02,
          2.99037963e-01],
        [-2.59739637e-01, -6.57299235e-02, -1.21640459e-01,
          6.16098121e-02, -2.76705116e-01,  2.83940405e-01,
          5.67553043e-02, -3.82246673e-01,  1.27283454e-01,
          -4.60834473e-01, -8.74459893e-02, -2.47729141e-02,
          -5.69200397e-01, -4.30991575e-02, -1.88208461e-01,
          -2.91496783e-01],
        [-1.23552479e-01,  6.32841468e-01,  1.12120378e+00,
          -7.41086185e-01, -5.93126059e-01,  2.26211831e-01,
          -2.05695078e-01, -3.52608442e-01,  9.03438330e-01,
          6.21440709e-01,  9.68916416e-02, -3.44388813e-01,
          9.74592343e-02,  1.30961210e-01, -1.72163367e-01,
          -2.35533029e-01],
        [ 6.55416250e-01, -4.45015021e-02,  2.47701615e-01,
          2.44953483e-01, -3.83173943e-01,  3.21545242e-03,
          -9.18954968e-01, -2.23512754e-01, -2.07451843e-02,
          2.86872268e-01, -1.96384668e-01, -6.85319304e-02,
          -2.96618074e-01,  1.04167849e-01,  1.07728827e+00,
          -6.44322455e-01],
        [ 4.46458086e-02,  2.54541636e-03, -5.37254930e-01,
          1.86950341e-01,  3.19382310e-01,  1.52567953e-01,
          -4.07050371e-01, -4.79387306e-02,  1.49396271e-01,
          -5.99468410e-01, -1.00776649e+00,  1.32225513e+00,
          1.78242549e-01,  9.81743932e-02, -5.14883876e-01,
          1.43864289e-01],
        [-1.06160782e-01,  3.17515701e-01,  1.12770647e-01,
          -1.23413533e-01,  3.42885137e-01,  1.09353292e+00,
          1.87411696e-01, -2.01667398e-01,  4.74381745e-01,
          1.57943219e-01,  1.16010606e-01,  7.31717572e-02,
          -2.64267266e-01,  1.25261187e-03, -1.73149146e-02,
          -2.79534549e-01],
        [-1.33562759e-01, -4.67555076e-02, -4.09846634e-01,
          5.01242392e-02,  9.01943743e-02, -1.30883858e-01,
          6.59412444e-02, -3.57583851e-01, -2.36094301e-03,
          2.88859289e-02, -6.34792596e-02,  3.16835903e-02,
          3.38930517e-01, -2.05417126e-01, -3.35124023e-02,
          3.71835530e-01],
        [ 1.75422765e-02,  6.48124292e-02,  3.11772764e-01,
          -1.09088821e-02, -3.22518557e-01,  4.59343612e-01,
          3.26293945e-01, -6.78550959e-01,  2.55229473e-01,
          -1.38149396e-01, -5.07415943e-02, -4.33003716e-02,
          -5.96088544e-03,  8.14818963e-02, -1.41967669e-01,
          -1.10748135e-01],
        [-4.10779826e-02,  1.99377254e-01,  1.07145417e+00,
          -1.36873162e+00, -5.41431904e-01, -7.97454491e-02,
          -5.32416999e-02,  4.44469899e-02,  4.37949717e-01,
          4.03883636e-01,  1.27924755e-01,  6.72185346e-02,
          7.58650601e-01,  7.19806179e-02,  3.72687727e-01,
          -3.79903913e-01],
        [ 1.40551162e+00, -6.34218097e-01,  1.76191211e-01,
          -1.83890671e-01, -1.23856828e-01,  2.19551828e-02,
          -1.29206133e+00,  3.32411081e-02, -4.91490960e-01,
          2.00777918e-01,  4.30908911e-02,  3.43929261e-01,
          -4.54050601e-01,  3.69966060e-01,  1.43931484e+00,
          -7.50304818e-01],
        [ 2.31063217e-01,  8.98800567e-02, -9.33139473e-02,
          1.30794421e-01,  2.05040529e-01,  1.91826701e-01,
          -7.61394799e-01,  3.45745757e-02, -1.13854989e-01,
          2.86040604e-01, -1.37577879e+00,  1.88237381e+00,
          -4.67445236e-03,  7.11724311e-02,  1.38931587e-01,
          2.82792538e-01],
        [-9.64758471e-02,  3.91324162e-01,  1.48809507e-01,
          5.03131412e-02,  3.75441194e-01,  5.82530856e-01,
          9.69970897e-02, -9.23245907e-01,  1.69673458e-01,
          -1.37636766e-01,  1.08566806e-02, -4.11695382e-03,
          1.21609524e-01, -2.31966168e-01, -7.38734379e-02,
          3.96878943e-02],
        [ 1.70711890e-01, -1.05148964e-01,  3.40651482e-01,
          -4.09471914e-02,  1.08860962e-01, -2.99426109e-01,
          7.68407108e-03,  1.20649531e-01,  1.20962761e-01,
          2.15877965e-01,  1.33231357e-01, -4.43342663e-02,
          -7.19198808e-02,  8.05684850e-02,  1.13072313e-01,
          2.75133699e-01],
        [-4.25018705e-02, -1.30809341e-02,  7.56809860e-02,
          6.37806132e-02, -4.00577962e-01,  1.95063218e-01,
          1.15179673e-01, -4.98861998e-01,  1.35212258e-01,
          -2.37216115e-01, -4.41482402e-02, -8.73405039e-02,
          4.90818312e-03,  1.27126679e-01, -9.31960866e-02,
          -8.97717178e-02]])

  b1 = np.array([-0.15278387, -0.15634   , -0.332915  , -0.0580904 , -0.5787469 ,
          0.391967  ,  0.23381062,  0.4884622 , -0.19414635, -0.1261845 ,
        -0.19312277, -0.15085046,  0.3777097 , -0.39250755, -0.50308186,
          1.3321356 ])

  w2 = np.array([[-1.5285141 ,  1.7164749 , -0.6618691 , -0.36077777],
        [-1.0699108 ,  1.9495416 ,  0.10766703, -1.0907431 ],
        [ 1.0888697 , -1.4917802 , -1.5597317 ,  1.0412133 ],
        [ 1.2860028 , -1.2152021 , -0.6099892 , -0.6931096 ],
        [ 1.3634448 ,  0.10468837,  0.22603506, -0.48889285],
        [-0.17492121, -1.9699056 , -1.4096725 ,  1.6686745 ],
        [-0.73389995,  1.0253717 ,  0.5541675 , -1.1383225 ],
        [-0.9302647 , -0.66531074, -1.5208398 ,  0.75726813],
        [ 0.52167565,  0.7618878 , -0.61971045, -1.4286469 ],
        [ 0.08201714, -0.6028566 ,  1.9564328 , -0.69704044],
        [-0.46450576, -0.78255546,  2.0598497 , -1.5172957 ],
        [-0.53498936, -0.6113318 ,  1.6838471 , -1.7817547 ],
        [ 0.45194325, -1.6147637 , -1.2520472 ,  0.41987902],
        [ 1.335757  , -0.4199011 , -0.26646164, -1.7726763 ],
        [ 0.7195736 ,  0.42365858, -0.9656444 , -1.2129759 ],
        [-0.8283897 ,  0.38448235, -1.3860296 ,  0.91995716]])

  b2 = np.array([-1.0159628 , -0.7282797 , -0.38382536,  1.640837  ])
  
  w1 = transpose(w1)
  w2 = transpose(w2)

  yout1 = dense(16, transpose(values), w1, b1, 'relu') #input layer with 4 neuron
  ypred = dense(4, yout1, w2, b2,'sigmoid') #output layer

  return(np.argmax(ypred))

